{"_id":"req","_rev":"49-8fdfb4e81297c875c1f76ea24852a70f","name":"req","description":"a CLI for request","dist-tags":{"latest":"0.1.4"},"versions":{"0.0.1":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.1","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.1","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.10","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"763fb4b59d826b76f66903616563c0f1dbdc1ba0","tarball":"https://registry.npmjs.org/req/-/req-0.0.1.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.2":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.2","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.2","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.10","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"349b3c140b91eb57957aa138c7c5666b8bb8a518","tarball":"https://registry.npmjs.org/req/-/req-0.0.2.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.3":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.3","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.3","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.10","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"91d5cfb9b0d1adbef70d2e1ebee333cc40968c97","tarball":"https://registry.npmjs.org/req/-/req-0.0.3.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.4":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.4","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.4","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.10","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"645ebcd5c657b9f51467669cfc3af6243c10b327","tarball":"https://registry.npmjs.org/req/-/req-0.0.4.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.5":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.5","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.5","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.10","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"143406dcca3bac56fd7cb0255caee781550a5b09","tarball":"https://registry.npmjs.org/req/-/req-0.0.5.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.6":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.6","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.6","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.10","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"d678375f3500e47e905b20d7d4a58964a0d70ef2","tarball":"https://registry.npmjs.org/req/-/req-0.0.6.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.7":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.7","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.7","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.10","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"9daf03ba7f32e3f5bdc3ddb7a06eeca92b7c5b77","tarball":"https://registry.npmjs.org/req/-/req-0.0.7.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.8":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.8","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","async":"0.1.8","prompt":"0.1.12","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.8","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.19","_nodeVersion":"v0.6.16","_defaultsLoaded":true,"dist":{"shasum":"c26c93cab1ec88ddc23532f58da8c21409e18557","tarball":"https://registry.npmjs.org/req/-/req-0.0.8.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.9":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.9","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","async":"0.1.8","prompt":"0.1.12","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.9","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.19","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"0bec13eddf6c404df5144f30cac7771249663d25","tarball":"https://registry.npmjs.org/req/-/req-0.0.9.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.10":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.10","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","async":"0.1.8","prompt":"0.1.12","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.10","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.19","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"0b6e666dd37d92db2ba4a184565fc9e983940391","tarball":"https://registry.npmjs.org/req/-/req-0.0.10.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.11":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.11","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","async":"0.1.8","prompt":"0.1.12","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.11","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.19","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"b0f2db3c5e80fad17c313115731e9f9a89ac0017","tarball":"https://registry.npmjs.org/req/-/req-0.0.11.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.12":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.12","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","async":"0.1.8","prompt":"0.1.12","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.12","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.19","_nodeVersion":"v0.6.19","_defaultsLoaded":true,"dist":{"shasum":"48b58e12ae9ab2415ee8db7e12f5207fc774fac1","tarball":"https://registry.npmjs.org/req/-/req-0.0.12.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.0.13":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.0.13","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","async":"0.1.8","prompt":"0.1.12","progress":"0.0.4"},"_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"_id":"req@0.0.13","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.19","_nodeVersion":"v0.6.19","_defaultsLoaded":true,"dist":{"shasum":"a3ca5b3a722fa8bcbefdabc5f506adfe65742bc5","tarball":"https://registry.npmjs.org/req/-/req-0.0.13.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.1.0":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.1.0","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","progress":"0.0.4"},"readme":"### req\n\nreq is a very simple command line wrapper around Mikeal Roger's excellent [request](https://github.com/mikeal/request) library.\n\n\nUsage:\n\n    Usage: req [options] [method] uri\n\n    Methods:\n      Any valid HTTP method is supported. If unspecified, GET will be used.\n\n    Options:\n      -h, --headers      Headers to attach to the request in the form header=value                                                                                                                  \n      -q, --querystring  Querystring parameters in the form param=value (these can also be passed as part of the URI)                                                                               \n      -b, --body         The body of the request. If this is set to valid json, it will automatically set the json content-type. Can also attach the contents of the file using e.g. @uploadthis.txt\n      -o, --output       File to write output to, otherwise will print text and json to screen and guess a filename for binaries                                                                    \n      -u, --username     Username for basic auth                                                                                                                                                    \n      -p, --password     Password for basic auth                                                                                                                                                    \n      -f, --form         Similar to the body flag, but sends the data as x-www-formurlencoded                                                                                                       \n      -v, --verbose      Output response headers and status codes   \n","_id":"req@0.1.0","dist":{"shasum":"0c675b561603f26bfda1be0d162237af6377089c","tarball":"https://registry.npmjs.org/req/-/req-0.1.0.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.1.1":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.1.1","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","progress":"0.0.4"},"readme":"### req\n\nreq is a very simple command line wrapper around Mikeal Roger's excellent [request](https://github.com/mikeal/request) library.\n\n\nUsage:\n\n    Usage: req [options] [method] uri\n\n    Methods:\n      Any valid HTTP method is supported. If unspecified, GET will be used.\n\n    Options:\n      -h, --headers      Headers to attach to the request in the form header=value                                                                                                                  \n      -q, --querystring  Querystring parameters in the form param=value (these can also be passed as part of the URI)                                                                               \n      -b, --body         The body of the request. If this is set to valid json, it will automatically set the json content-type. Can also attach the contents of the file using e.g. @uploadthis.txt\n      -o, --output       File to write output to, otherwise will print text and json to screen and guess a filename for binaries                                                                    \n      -u, --username     Username for basic auth                                                                                                                                                    \n      -p, --password     Password for basic auth                                                                                                                                                    \n      -f, --form         Similar to the body flag, but sends the data as x-www-formurlencoded                                                                                                       \n      -v, --verbose      Output response headers and status codes   \n","_id":"req@0.1.1","dist":{"shasum":"5753192c6ac4fdf7071211c7229a09c4e0977fe3","tarball":"https://registry.npmjs.org/req/-/req-0.1.1.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.1.2":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.1.2","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","progress":"0.0.4"},"readme":"### req\n\nreq is a very simple command line wrapper around Mikeal Roger's excellent [request](https://github.com/mikeal/request) library.\n\nreq tries to make some guesses as to what you'd really like to do. When a body is detected as parseable json, req will send it with the appropriate content-type.\nWhen sending a file, req will base the Content-Type on the file's extension. On a GET request, req will print text and json to stdout, while other requests will\nbe saved to a file according to either a Content-Disposition filename or the path of the request. You can override this, of course, by using the -o flag (works for text and json as well).\nAny headers that you manually specify will always take precedence over req's guesses.\n\nI wrote this little wrapper because I got tired of curl's massive man-page and unintuitive flags. Is it as powerful as curl? Probably not, but it is definitely easier to use.\n\nUsage:\n\n    Usage: req [options] [method] uri\n\n    Methods:\n      Any valid HTTP method is supported. If unspecified, GET will be used.\n\n    Options:\n      -h, --headers      Headers to attach to the request in the form header=value                                                                                                                  \n      -q, --querystring  Querystring parameters in the form param=value (these can also be passed as part of the URI)                                                                               \n      -b, --body         The body of the request. If this is set to valid json, it will automatically set the json content-type. Can also attach the contents of the file using e.g. @uploadthis.txt\n      -o, --output       File to write output to, otherwise will print text and json to screen and guess a filename for binaries                                                                    \n      -u, --username     Username for basic auth                                                                                                                                                    \n      -p, --password     Password for basic auth                                                                                                                                                    \n      -f, --form         Similar to the body flag, but sends the data as x-www-form-urlencoded                                                                                                       \n      -v, --verbose      Output response headers and status codes   \n\n\nSome examples:\n\nTo upload the file picture.jpg to example.com (assumes a POST request, automatically sets Content-Type to image/jpeg based on file extension)\n\n    req -b @picture.jpg example.com/pictures\n\nTo PUT some plain text as form data (x-www-form-urlencoded)\n\n    req put -f 'formdata' example.com/forms\n\nTo POST a JSON blob to example.com/users?user=tom (automatically detects valid json and sets Content-Type to application/json)\n\n    req -b '{\"status\": \"bored\"}' -q user=tom example.com/users\n\nSetting multiple query strings or headers is as easy as adding more -q or -h flags (PUT example.com/users?user=tom&status=bored&location=home)\n\n    req put -q user=tom -q status=bored -q location=home example.com/users\n\nBasic auth? Not a problem! (Note that currently you must specify these inline. A prompt will be coming in the next version)\n\n    req -u username -p password secureexample.com\n\nDownload a file\n\n    req example.com/download.exe\n\nSpecify a location\n\n    req example.com/download.exe -o realname.exe\n","_id":"req@0.1.2","dist":{"shasum":"3708d90f307fbe74ce7b6ae2f35536c5664ade4f","tarball":"https://registry.npmjs.org/req/-/req-0.1.2.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.1.3":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.1.3","homepage":"https://github.com/nathan-lafreniere/node-req","repository":{"type":"git","url":"git://github.com/nathan-lafreniere/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","progress":"0.0.4"},"readme":"### req\n\nreq is a very simple command line wrapper around Mikeal Roger's excellent [request](https://github.com/mikeal/request) library.\n\nreq tries to make some guesses as to what you'd really like to do. When a body is detected as parseable json, req will send it with the appropriate content-type.\nWhen sending a file, req will base the Content-Type on the file's extension. On a GET request, req will print text and json to stdout, while other requests will\nbe saved to a file according to either a Content-Disposition filename or the path of the request. You can override this, of course, by using the -o flag (works for text and json as well).\nAny headers that you manually specify will always take precedence over req's guesses.\n\nI wrote this little wrapper because I got tired of curl's massive man-page and unintuitive flags. Is it as powerful as curl? Probably not, but it is definitely easier to use.\n\nUsage:\n\n    Usage: req [options] [method] uri\n\n    Methods:\n      Any valid HTTP method is supported. If unspecified, GET will be used.\n\n    Options:\n      -h, --headers      Headers to attach to the request in the form header=value                                                                                                                  \n      -q, --querystring  Querystring parameters in the form param=value (these can also be passed as part of the URI)                                                                               \n      -b, --body         The body of the request. If this is set to valid json, it will automatically set the json content-type. Can also attach the contents of the file using e.g. @uploadthis.txt\n      -o, --output       File to write output to, otherwise will print text and json to screen and guess a filename for binaries                                                                    \n      -u, --username     Username for basic auth                                                                                                                                                    \n      -p, --password     Password for basic auth                                                                                                                                                    \n      -f, --form         Similar to the body flag, but sends the data as x-www-form-urlencoded                                                                                                       \n      -v, --verbose      Output response headers and status codes   \n\n\nSome examples:\n\nTo upload the file picture.jpg to example.com (assumes a POST request, automatically sets Content-Type to image/jpeg based on file extension)\n\n    req -b @picture.jpg example.com/pictures\n\nTo PUT some plain text as form data (x-www-form-urlencoded)\n\n    req put -f 'formdata' example.com/forms\n\nTo POST a JSON blob to example.com/users?user=tom (automatically detects valid json and sets Content-Type to application/json)\n\n    req -b '{\"status\": \"bored\"}' -q user=tom example.com/users\n\nSetting multiple query strings or headers is as easy as adding more -q or -h flags (PUT example.com/users?user=tom&status=bored&location=home)\n\n    req put -q user=tom -q status=bored -q location=home example.com/users\n\nBasic auth? Not a problem! (Note that currently you must specify these inline. A prompt will be coming in the next version)\n\n    req -u username -p password secureexample.com\n\nDownload a file\n\n    req example.com/download.exe\n\nSpecify a location\n\n    req example.com/download.exe -o realname.exe\n","_id":"req@0.1.3","dist":{"shasum":"8b60d460bc0f84e049abcdc063ee1fa4d463f65c","tarball":"https://registry.npmjs.org/req/-/req-0.1.3.tgz"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}},"0.1.4":{"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"name":"req","description":"a CLI for request","version":"0.1.4","homepage":"https://github.com/nlf/node-req","repository":{"type":"git","url":"git://github.com/nlf/node-req.git"},"bin":{"req":"./bin/req"},"dependencies":{"optimist":"0.3.1","request":"2.9.202","mime":"1.2.5","progress":"0.0.4"},"readme":"### req\n\nreq is a very simple command line wrapper around Mikeal Roger's excellent [request](https://github.com/mikeal/request) library.\n\nreq tries to make some guesses as to what you'd really like to do. When a body is detected as parseable json, req will send it with the appropriate content-type.\nWhen sending a file, req will base the Content-Type on the file's extension. On a GET request, req will print text and json to stdout, while other requests will\nbe saved to a file according to either a Content-Disposition filename or the path of the request. You can override this, of course, by using the -o flag (works for text and json as well).\nAny headers that you manually specify will always take precedence over req's guesses.\n\nI wrote this little wrapper because I got tired of curl's massive man-page and unintuitive flags. Is it as powerful as curl? Probably not, but it is definitely easier to use.\n\nUsage:\n\n    Usage: req [options] [method] uri\n\n    Methods:\n      Any valid HTTP method is supported. If unspecified, GET will be used.\n\n    Options:\n      -h, --headers      Headers to attach to the request in the form header=value                                                                                                                  \n      -q, --querystring  Querystring parameters in the form param=value (these can also be passed as part of the URI)                                                                               \n      -b, --body         The body of the request. If this is set to valid json, it will automatically set the json content-type. Can also attach the contents of the file using e.g. @uploadthis.txt\n      -o, --output       File to write output to, otherwise will print text and json to screen and guess a filename for binaries                                                                    \n      -u, --username     Username for basic auth                                                                                                                                                    \n      -p, --password     Password for basic auth                                                                                                                                                    \n      -f, --form         Similar to the body flag, but sends the data as x-www-form-urlencoded                                                                                                       \n      -v, --verbose      Output response headers and status codes   \n\n\nSome examples:\n\nTo upload the file picture.jpg to example.com (assumes a POST request, automatically sets Content-Type to image/jpeg based on file extension)\n\n    req -b @picture.jpg example.com/pictures\n\nTo PUT some plain text as form data (x-www-form-urlencoded)\n\n    req put -f 'formdata' example.com/forms\n\nTo POST a JSON blob to example.com/users?user=tom (automatically detects valid json and sets Content-Type to application/json)\n\n    req -b '{\"status\": \"bored\"}' -q user=tom example.com/users\n\nSetting multiple query strings or headers is as easy as adding more -q or -h flags (PUT example.com/users?user=tom&status=bored&location=home)\n\n    req put -q user=tom -q status=bored -q location=home example.com/users\n\nBasic auth? Not a problem! (Note that currently you must specify these inline. A prompt will be coming in the next version)\n\n    req -u username -p password secureexample.com\n\nDownload a file\n\n    req example.com/download.exe\n\nSpecify a location\n\n    req example.com/download.exe -o realname.exe\n","readmeFilename":"README.md","_id":"req@0.1.4","dist":{"shasum":"d63eeb9b82b8ed148b84314d8a8d72921182cba4","tarball":"https://registry.npmjs.org/req/-/req-0.1.4.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"},"maintainers":[{"name":"nathan-lafreniere","email":"quitlahok@gmail.com"}],"directories":{}}},"readme":"### req\n\nreq is a very simple command line wrapper around Mikeal Roger's excellent [request](https://github.com/mikeal/request) library.\n\n\nUsage:\n\n    req [method] uri\n\n\nMethod is optional and will default to GET if not specified. URI is required (obviously).\n\nAdditional supported flags are..\n\n    -h/--headers\n        add the given header to the object passed to request, ie: -h content-type=text/plain\n    -o/--options\n        add the given option to the object passed to request, ie: -o encoding=binary\n    -q/--query\n        add the given query to the querystring object passed to request, ie: -q search=turtles\n    -f/--file\n        use the given file as the body in the request\n    -d/--data\n        use the data as the body in the request (note that both of these attempt to guess a valid content-type)\n    -v   \n        verbose. will console.log the arguments object before it sends the request.\n","maintainers":[{"name":"nlf","email":"quitlahok@gmail.com"}],"time":{"modified":"2013-09-25T19:24:43.244Z","created":"2012-04-26T22:12:58.423Z","0.0.1":"2012-04-26T22:13:00.103Z","0.0.2":"2012-04-26T22:30:54.242Z","0.0.3":"2012-04-26T23:48:46.877Z","0.0.4":"2012-04-27T22:07:22.302Z","0.0.5":"2012-04-27T22:26:56.770Z","0.0.6":"2012-04-27T22:36:35.109Z","0.0.7":"2012-04-27T22:44:45.807Z","0.0.8":"2012-05-03T23:10:22.167Z","0.0.9":"2012-05-14T18:03:22.450Z","0.0.10":"2012-05-18T18:09:31.462Z","0.0.11":"2012-05-24T21:49:36.488Z","0.0.12":"2012-06-20T22:55:05.093Z","0.0.13":"2012-06-21T17:53:10.835Z","0.1.0":"2012-07-30T22:38:36.509Z","0.1.1":"2012-08-03T19:33:13.650Z","0.1.2":"2012-08-06T23:10:35.678Z","0.1.3":"2012-12-11T21:23:12.351Z","0.1.4":"2013-03-12T16:42:53.867Z"},"author":{"name":"Nathan LaFreniere","email":"quitlahok@gmail.com"},"repository":{"type":"git","url":"git://github.com/nlf/node-req.git"},"users":{"fgribreau":true,"coalesce":true},"_attachments":{},"_etag":"W/\"c0cf7664a78ea6d9b9c6616d8b3ffb86\"","_lastModified":"Sun, 27 May 2018 15:51:03 GMT"}